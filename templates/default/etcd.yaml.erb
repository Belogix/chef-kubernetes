apiVersion: v1
kind: Pod
metadata:
  name: etcd-server
  namespace: kube-system
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "<%= node[:etcd][:client_port] %>"
    prometheus.io/scrape: "true"
spec:
  hostNetwork: true
  containers:
  - name: etcd-container
    image: <%= node[:etcd][:image] %>:<%= node[:etcd][:version] %>
    resources:
      requests:
        cpu: 100m
    command:
    - <%= node[:etcd][:binary] %>
    - --name=<%= node[:etcd][:host] %>
    - --initial-advertise-peer-urls=<%= node[:etcd][:proto] %>://<%= node[:etcd][:host] %>:<%= node[:etcd][:server_port] %>
    - --listen-peer-urls=<%= node[:etcd][:proto] %>://<%= node[:etcd][:host] %>:<%= node[:etcd][:server_port] %>,http://127.0.0.1:2380
    - --listen-client-urls=<%= node[:etcd][:proto] %>://<%= node[:etcd][:host] %>:<%= node[:etcd][:client_port] %>,http://127.0.0.1:2379
    - --advertise-client-urls=<%= node[:etcd][:proto] %>://<%= node[:etcd][:host] %>:<%= node[:etcd][:client_port] %>
    - --initial-cluster-token=<%= node[:etcd][:initial_cluster_token] %>
    - --initial-cluster=<%= node[:etcd][:host] %>=<%= node[:etcd][:proto] %>://<%= node[:etcd][:host] %>:<%= node[:etcd][:server_port] %>
    - --initial-cluster-state=new
    - --data-dir=<%= node[:etcd][:data_dir] %>
    # - --client-cert-auth=<%= node[:etcd][:client_cert_auth] %>
    # - --trusted-ca-file=<%= node[:etcd][:trusted_ca_file] %>
    # - --cert-file=<%= node[:etcd][:cert_file] %>
    # - --key-file=<%= node[:etcd][:key_file] %>
    # - --peer-client-cert-auth=<%= node[:etcd][:peer_client_cert_auth] %>
    # - --peer-trusted-ca-file=<%= node[:etcd][:peer_trusted_ca_file] %>
    # - --peer-cert-file=<%= node[:etcd][:peer_cert_file] %>
    # - --peer-key-file=<%= node[:etcd][:peer_key_file] %>
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        port: 2379
        path: "/health"
      initialDelaySeconds: 15
      timeoutSeconds: 15
    ports:
    - name: serverport
      containerPort: <%= node[:etcd][:server_port] %>
      hostPort: <%= node[:etcd][:server_port] %>
    - name: clientport
      containerPort: <%= node[:etcd][:client_port] %>
      hostPort: <%= node[:etcd][:client_port] %>
    volumeMounts:
    - name: varetcd
      mountPath: "<%= node[:etcd][:data_dir] %>"
      readOnly: false
    - name: varlogetcd
      mountPath: "/var/log/etcd.log"
      readOnly: false
    - name: ssl-certs-kubernetes
      mountPath: "/etc/kubernetes/ssl"
      readOnly: true
  volumes:
  - name: ssl-certs-kubernetes
    hostPath:
      path: /etc/kubernetes/ssl
  - name: varetcd
    hostPath:
      path: "<%= node[:etcd][:data_dir] %>"
  - name: varlogetcd
    hostPath:
      path: "/var/log/etcd.log"
