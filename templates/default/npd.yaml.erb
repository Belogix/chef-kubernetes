apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-problem-detector
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: npd-binding
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node-problem-detector
subjects:
- kind: ServiceAccount
  name: node-problem-detector
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: npd
  namespace: kube-system
  labels:
    k8s-app: node-problem-detector
    version: v<%= node['kubernetes']['addons']['npd']['version'] %>
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    matchLabels:
      k8s-app: node-problem-detector
      version: v<%= node['kubernetes']['addons']['npd']['version'] %>
      kubernetes.io/cluster-service: "true"
  template:
    metadata:
      labels:
        k8s-app: node-problem-detector
        version: v<%= node['kubernetes']['addons']['npd']['version'] %>
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - name: node-problem-detector
        image: k8s.gcr.io/node-problem-detector:v<%= node['kubernetes']['addons']['npd']['version'] %>
        command:
        - /node-problem-detector
        - --address=<%= node['kubernetes']['addons']['npd']['address'] %>
        - --port=<%= node['kubernetes']['addons']['npd']['port'] %>
        - --v=<%= node['kubernetes']['addons']['npd']['log_level'] %>
        - --system-log-monitors=<%= node['kubernetes']['addons']['npd']['system_log_monitors'].sort.join(',') %>
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: "200m"
            memory: "100Mi"
          requests:
            cpu: "20m"
            memory: "20Mi"
        livenessProbe:
          httpGet:
            path: /healthz
            port: <%= node['kubernetes']['addons']['npd']['port'] %>
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: <%= node['kubernetes']['addons']['npd']['port'] %>
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: log
          mountPath: /var/log
        - name: journal
          mountPath: /var/log/journal
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
      volumes:
      - name: log
        hostPath:
          path: /var/log/
      - name: journal
        hostPath:
          path: /run/log/journal
      - name: localtime
        hostPath:
          path: /etc/localtime
          type: "FileOrCreate"
      serviceAccountName: node-problem-detector
      tolerations:
      - operator: "Exists"
        effect: "NoExecute"
      - key: "CriticalAddonsOnly"
        operator: "Exists"
